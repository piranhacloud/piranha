name: release
on:
  push:
    tags:        
      - v*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        cache: 'maven'
        distribution: 'temurin'
        java-version: 19
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    - name: Build with Maven
      run: mvn --no-transfer-progress -B -DskipTests=true install
    - name: Login to Docker Hub
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.10.0
    - run: docker buildx inspect
    - name: Build Piranha Core Profile image
      run: |
        cd dist/coreprofile
        TAG=${GITHUB_REF}
        INDEX=${TAG%v*}
        VERSION=${TAG:${#INDEX}}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build --load --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/coreprofile:amd64-$VERSION .
        docker push piranhacloud/coreprofile:amd64-$VERSION
        docker buildx build --load --platform linux/arm64 -f Dockerfile.arm64v8 -t piranhacloud/coreprofile:arm64v8-$VERSION .
        docker push piranhacloud/coreprofile:arm64v8-$VERSION
        docker manifest rm piranhacloud/coreprofile:$VERSION || true
        docker manifest create piranhacloud/coreprofile:$VERSION \
          piranhacloud/coreprofile:amd64-$VERSION \
          piranhacloud/coreprofile:arm64v8-$VERSION
        docker manifest annotate piranhacloud/coreprofile:$VERSION \
          piranhacloud/coreprofile:amd64-$VERSION --os linux --arch amd64
        docker manifest annotate piranhacloud/coreprofile:$VERSION \
          piranhacloud/coreprofile:arm64v8-$VERSION --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/coreprofile:$VERSION
    - name: Build Piranha Micro image
      run: |
        cd dist/micro
        TAG=${GITHUB_REF}
        INDEX=${TAG%v*}
        VERSION=${TAG:${#INDEX}}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build --load --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/micro:amd64-$VERSION .
        docker push piranhacloud/micro:amd64-$VERSION
        docker buildx build --load --platform linux/arm64 -f Dockerfile.arm64v8 -t piranhacloud/micro:arm64v8-$VERSION .
        docker push piranhacloud/micro:arm64v8-$VERSION
        docker manifest rm piranhacloud/micro:$VERSION || true
        docker manifest create piranhacloud/micro:$VERSION \
          piranhacloud/micro:amd64-$VERSION \
          piranhacloud/micro:arm64v8-$VERSION
        docker manifest annotate piranhacloud/micro:$VERSION \
          piranhacloud/micro:amd64-$VERSION --os linux --arch amd64
        docker manifest annotate piranhacloud/micro:$VERSION \
          piranhacloud/micro:arm64v8-$VERSION --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/micro:$VERSION
    - name: Build Piranha Micro Profile image
      run: |
        cd dist/microprofile
        TAG=${GITHUB_REF}
        INDEX=${TAG%v*}
        VERSION=${TAG:${#INDEX}}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build --load --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/microprofile:amd64-$VERSION .
        docker push piranhacloud/microprofile:amd64-$VERSION
        docker buildx build --load --platform linux/arm64 -f Dockerfile.arm64v8 -t piranhacloud/microprofile:arm64v8-$VERSION .
        docker push piranhacloud/microprofile:arm64v8-$VERSION
        docker manifest rm piranhacloud/microprofile:$VERSION || true
        docker manifest create piranhacloud/microprofile:$VERSION \
          piranhacloud/microprofile:amd64-$VERSION \
          piranhacloud/microprofile:arm64v8-$VERSION
        docker manifest annotate piranhacloud/microprofile:$VERSION \
          piranhacloud/microprofile:amd64-$VERSION --os linux --arch amd64
        docker manifest annotate piranhacloud/microprofile:$VERSION \
          piranhacloud/microprofile:arm64v8-$VERSION --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/microprofile:$VERSION
    - name: Build Piranha Server image
      run: |
        cd dist/server
        TAG=${GITHUB_REF}
        INDEX=${TAG%v*}
        VERSION=${TAG:${#INDEX}}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build --load --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/server:amd64-$VERSION .
        docker push piranhacloud/server:amd64-$VERSION
        docker buildx build --load --platform linux/arm64 -f Dockerfile.arm64v8 -t piranhacloud/server:arm64v8-$VERSION .
        docker push piranhacloud/server:arm64v8-$VERSION
        docker manifest rm piranhacloud/server:$VERSION || true
        docker manifest create piranhacloud/server:$VERSION \
          piranhacloud/server:amd64-$VERSION \
          piranhacloud/server:arm64v8-$VERSION
        docker manifest annotate piranhacloud/server:$VERSION \
          piranhacloud/server:amd64-$VERSION --os linux --arch amd64
        docker manifest annotate piranhacloud/server:$VERSION \
          piranhacloud/server:arm64v8-$VERSION --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/server:$VERSION
    - name: Build Piranha Servlet image
      run: |
        cd dist/servlet
        TAG=${GITHUB_REF}
        INDEX=${TAG%v*}
        VERSION=${TAG:${#INDEX}}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build --load --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/servlet:amd64-$VERSION .
        docker push piranhacloud/servlet:amd64-$VERSION
        docker buildx build --load --platform linux/arm64 -f Dockerfile.arm64v8 -t piranhacloud/servlet:arm64v8-$VERSION .
        docker push piranhacloud/servlet:arm64v8-$VERSION
        docker manifest rm piranhacloud/servlet:$VERSION || true
        docker manifest create piranhacloud/servlet:$VERSION \
          piranhacloud/servlet:amd64-$VERSION \
          piranhacloud/servlet:arm64v8-$VERSION
        docker manifest annotate piranhacloud/servlet:$VERSION \
          piranhacloud/servlet:amd64-$VERSION --os linux --arch amd64
        docker manifest annotate piranhacloud/servlet:$VERSION \
          piranhacloud/servlet:arm64v8-$VERSION --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/servlet:$VERSION
    - name: Build Piranha Web Profile image
      run: |
        cd dist/webprofile
        TAG=${GITHUB_REF}
        INDEX=${TAG%v*}
        VERSION=${TAG:${#INDEX}}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx build --load --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/webprofile:amd64-$VERSION .
        docker push piranhacloud/webprofile:amd64-$VERSION
        docker buildx build --load --platform linux/arm64 -f Dockerfile.arm64v8 -t piranhacloud/webprofile:arm64v8-$VERSION .
        docker push piranhacloud/webprofile:arm64v8-$VERSION
        docker manifest rm piranhacloud/webprofile:$VERSION || true
        docker manifest create piranhacloud/webprofile:$VERSION \
          piranhacloud/webprofile:amd64-$VERSION \
          piranhacloud/webprofile:arm64v8-$VERSION
        docker manifest annotate piranhacloud/webprofile:$VERSION \
          piranhacloud/webprofile:amd64-$VERSION --os linux --arch amd64
        docker manifest annotate piranhacloud/webprofile:$VERSION \
          piranhacloud/webprofile:arm64v8-$VERSION --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/webprofile:$VERSION
    - name: Build with Maven
      run: |
        export MAVEN_OPTS='--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED'
        mvn -B -DstagingProgressTimeoutMinutes=10 -DskipTests=true -P 'release,!test' -ntp clean deploy
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  maven-plugin-documentation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v3
      with:
        ref: 'gh-pages'
        token: ${{ secrets.GIT_PASSWORD }}
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        cache: 'maven'
        distribution: 'temurin'
        java-version: 19
    - name: Build with Maven
      run: |
        git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/piranhacloud/piranha piranha
        cd piranha
        git checkout $GITHUB_REF_NAME
        mvn -B -DskipTests -DskipITs -ntp install
        cd maven/plugins/piranha-maven-plugin
        mvn -B -DskipTests -DskipITs -ntp site
        rm -rf ../../../../maven/piranha-maven-plugin || true
        mkdir -p ../../../../maven/piranha-maven-plugin || true
        cp -R target/site/* ../../../../maven/piranha-maven-plugin
        cd ../../../..
        rm -rf piranha
        git config --global user.email "noreply@piranha.cloud"
        git config --global user.name "Automated publish"
        git add .
        git commit -a -m "Publishing Maven plugin documentation"
        git push
