name: release
on:
  push:
    tags:        
      - v*
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: 'maven'
        distribution: 'temurin'
        java-version: 21
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    - name: Build with Maven
      run: mvn --no-transfer-progress -B -DskipTests=true install
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.10.0
    - run: docker buildx inspect
    - name: Build Piranha Core Profile image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/coreprofile
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Micro image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/micro
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Micro Profile image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/microprofile
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Platform image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/platform
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Server image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/server
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Servlet image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/servlet
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Web Profile image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/webprofile
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build with Maven
      run: |
        export MAVEN_OPTS='--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED'
        mvn -B -DstagingProgressTimeoutMinutes=10 -DskipTests=true -P 'release,!test' -ntp clean deploy
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
