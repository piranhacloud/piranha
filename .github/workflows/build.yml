name: build
on: 
  push:
    branches:
      - '*'
    tags-ignore:
      - 'v*'
  pull_request:
    branches:
      - '*'  
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [ 21, 22 ]
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
    - name: Build with Maven
      run: mvn --no-transfer-progress -B -T 1 install
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: ${{ runner.os != 'Windows' }}
      with:
        files: '**/target/surefire-reports/*.xml'     
  codeql:
    name: codeql
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'java'
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - name: Build with Maven
      run: mvn -B -DskipTests=true -DskipITs=true --ntp install
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
  dockerhub:
    if: github.repository == 'piranhacloud/piranha' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21
    - name: Build with Maven
      run: mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' verify
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.10.0
    - run: docker buildx inspect
    - name: Build Piranha Core Profile image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/coreprofile
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Isolated image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/isolated
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Micro image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/micro
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha MicroProfile image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/microprofile
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Platform image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/platform
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Server image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/server
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Servlet image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/servlet
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
    - name: Build Piranha Web Profile image
      run: |
        mvn -B -Dmaven.javadoc.skip=true -DskipTests=true -DskipITs=true -ntp -P '!test' install
        cd dist/webprofile
        mvn -B -DskipTests=true -DskipITs=true -ntp -P docker deploy
  sonatype:
    if: github.repository == 'piranhacloud/piranha' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Build with Maven
      run: mvn -B -DskipTests=true -P '!test' -ntp deploy
      env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
