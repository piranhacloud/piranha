name: build
on: 
  push:
    branches:
      - '*'
    tags-ignore:
      - 'v*'
  pull_request:
    branches:
      - '*'  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '18-ea' ]
        os: [ubuntu-latest]
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v1
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
    - name: Build with Maven
      run: mvn --no-transfer-progress -B install
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: '**/target/surefire-reports/*.xml'     
  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/current'
    steps:
    - name: Checkout sources
      uses: actions/checkout@v1
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Build with Maven
      run: mvn --no-transfer-progress -B -DskipTests=true -DskipITs -P '!test' verify
    - name: Login to Docker Hub
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Piranha Server Docker image
      run: |
        cd server/standard
        docker build -f Dockerfile.amd64 -t piranhacloud/server:amd64-snapshot .
        docker push piranhacloud/server:amd64-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create piranhacloud/server:snapshot \
          piranhacloud/server:amd64-snapshot
        docker manifest annotate piranhacloud/server:snapshot \
          piranhacloud/server:amd64-snapshot --os linux --arch amd64
        docker manifest push piranhacloud/server:snapshot
    - name: Build Piranha Micro Docker image
      run: |
        cd micro/standard
        docker build -f Dockerfile.amd64 -t piranhacloud/micro:amd64-snapshot .
        docker push piranhacloud/micro:amd64-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create piranhacloud/micro:snapshot \
          piranhacloud/micro:amd64-snapshot
        docker manifest annotate piranhacloud/micro:snapshot \
          piranhacloud/micro:amd64-snapshot --os linux --arch amd64
        docker manifest push piranhacloud/micro:snapshot
