name: nightly
on:
  schedule:
  - cron: "0 0 * * *"
  workflow_dispatch:
jobs:
  dependency-check:
    if: github.repository == 'piranhacloud/piranha'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Analyze with Dependency Check
      run: |
        mvn -B -ntp -P dependency-check dependency-check:aggregate || true
  dockerhub:
    if: github.repository == 'piranhacloud/piranha'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Build with Maven
      run: mvn -B -DskipTests=true -DskipITs=true -ntp -P '!test' verify
    - name: Login to Docker Hub
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2        
    - name: Build Piranha Core Profile image
      run: |
        cd dist/coreprofile
        docker buildx build --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/coreprofile:amd64-snapshot .
        docker buildx build --platform linux/arm64/v8 -f Dockerfile.arm64v8 -t piranhacloud/coreprofile:arm64v8-snapshot .
        docker push piranhacloud/coreprofile:amd64-snapshot
        docker push piranhacloud/coreprofile:arm64v8-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create --amend piranhacloud/coreprofile:snapshot \
          piranhacloud/coreprofile:amd64-snapshot \
          piranhacloud/coreprofile:arm64v8-snapshot
        docker manifest annotate piranhacloud/coreprofile:snapshot \
          piranhacloud/coreprofile:amd64-snapshot --os linux --arch amd64
        docker manifest annotate piranhacloud/coreprofile:snapshot \
          piranhacloud/coreprofile:arm64v8-snapshot --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/coreprofile:snapshot
    - name: Build Piranha Micro image
      run: |
        cd micro/dist
        docker buildx build --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/micro:amd64-snapshot .
        docker buildx build --platform linux/arm64/v8 -f Dockerfile.arm64v8 -t piranhacloud/micro:arm64v8-snapshot .
        docker push piranhacloud/micro:amd64-snapshot
        docker push piranhacloud/micro:arm64v8-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create --amend piranhacloud/micro:snapshot \
          piranhacloud/micro:amd64-snapshot \
          piranhacloud/micro:arm64v8-snapshot
        docker manifest annotate piranhacloud/micro:snapshot \
          piranhacloud/micro:amd64-snapshot --os linux --arch amd64
        docker manifest annotate piranhacloud/micro:snapshot \
          piranhacloud/micro:arm64v8-snapshot --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/micro:snapshot
    - name: Build Piranha Micro Profile image
      run: |
        cd dist/microprofile
        docker buildx build --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/microprofile:amd64-snapshot .
        docker buildx build --platform linux/arm64/v8 -f Dockerfile.arm64v8 -t piranhacloud/microprofile:arm64v8-snapshot .
        docker push piranhacloud/microprofile:amd64-snapshot
        docker push piranhacloud/microprofile:arm64v8-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create --amend piranhacloud/microprofile:snapshot \
          piranhacloud/microprofile:amd64-snapshot \
          piranhacloud/microprofile:arm64v8-snapshot
        docker manifest annotate piranhacloud/microprofile:snapshot \
          piranhacloud/microprofile:amd64-snapshot --os linux --arch amd64
        docker manifest annotate piranhacloud/microprofile:snapshot \
          piranhacloud/microprofile:arm64v8-snapshot --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/microprofile:snapshot
    - name: Build Piranha Server image
      run: |
        cd dist/server
        docker buildx build --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/server:amd64-snapshot .
        docker buildx build --platform linux/arm64/v8 -f Dockerfile.arm64v8 -t piranhacloud/server:arm64v8-snapshot .
        docker push piranhacloud/server:amd64-snapshot
        docker push piranhacloud/server:arm64v8-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create --amend piranhacloud/server:snapshot \
          piranhacloud/server:amd64-snapshot \
          piranhacloud/server:arm64v8-snapshot
        docker manifest annotate piranhacloud/server:snapshot \
          piranhacloud/server:amd64-snapshot --os linux --arch amd64
        docker manifest annotate piranhacloud/server:snapshot \
          piranhacloud/server:arm64v8-snapshot --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/server:snapshot
    - name: Build Piranha Servlet image
      run: |
        cd dist/servlet
        docker buildx build --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/servlet:amd64-snapshot .
        docker buildx build --platform linux/arm64/v8 -f Dockerfile.arm64v8 -t piranhacloud/servlet:arm64v8-snapshot .
        docker push piranhacloud/servlet:amd64-snapshot
        docker push piranhacloud/servlet:arm64v8-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create --amend piranhacloud/servlet:snapshot \
          piranhacloud/servlet:amd64-snapshot \
          piranhacloud/servlet:arm64v8-snapshot
        docker manifest annotate piranhacloud/servlet:snapshot \
          piranhacloud/servlet:amd64-snapshot --os linux --arch amd64
        docker manifest annotate piranhacloud/servlet:snapshot \
          piranhacloud/servlet:arm64v8-snapshot --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/servlet:snapshot
    - name: Build Piranha Web Profile image
      run: |
        cd dist/webprofile
        docker buildx build --platform linux/amd64 -f Dockerfile.amd64 -t piranhacloud/webprofile:amd64-snapshot .
        docker buildx build --platform linux/arm64/v8 -f Dockerfile.arm64v8 -t piranhacloud/webprofile:arm64v8-snapshot .
        docker push piranhacloud/webprofile:amd64-snapshot
        docker push piranhacloud/webprofile:arm64v8-snapshot
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create --amend piranhacloud/webprofile:snapshot \
          piranhacloud/webprofile:amd64-snapshot \
          piranhacloud/webprofile:arm64v8-snapshot
        docker manifest annotate piranhacloud/webprofile:snapshot \
          piranhacloud/webprofile:amd64-snapshot --os linux --arch amd64
        docker manifest annotate piranhacloud/webprofile:snapshot \
          piranhacloud/webprofile:arm64v8-snapshot --os linux --arch arm64 --variant v8
        docker manifest push piranhacloud/webprofile:snapshot
  early-access:
    if: github.repository == 'piranhacloud/piranha'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [ 'EA' ]
        os: [ubuntu-latest]
    steps:
    - name: Checkout Sources
      uses: actions/checkout@v3
    - name: Setup Java ${{ matrix.java }}
      uses: oracle-actions/setup-java@v1
      with:
        website: jdk.java.net
        release: ${{ matrix.java }}
    - name: Build with Maven
      run: mvn --no-transfer-progress -B install -Djacoco.skip=true
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: '**/target/surefire-reports/*.xml'
  sonarcloud:
    if: github.repository == 'piranhacloud/piranha'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Analyze with SonarCloud
      run: |
        mvn -B -ntp install verify site \
        sonar:sonar -Dsonar.projectKey=piranhacloud_piranha \
        -Dsonar.organization=piranhacloud -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONAR_LOGIN }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
  stale:
    if: github.repository == 'piranhacloud/piranha'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/stale@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        stale-issue-message: 'This issue is stale because it has been open 80 days with no activity. Remove stale label or comment or this will be closed in 10 days'
        days-before-stale: 80
        days-before-close: 10
