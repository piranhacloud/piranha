<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>cloud.piranha.external.webprofiletck</groupId>
        <artifactId>project</artifactId>
        <version>24.10.0-SNAPSHOT</version>
    </parent>
    <artifactId>jsonp-tck</artifactId>
    <packaging>pom</packaging>
    <name>Piranha Web Profile - JSON Processing TCK</name>
    <properties>
        <jsonp.tck.version>2.1.1</jsonp.tck.version>
        <tck.home>${project.build.directory}/tck</tck.home>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>cloud.piranha</groupId>
                <artifactId>bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <echo>Executing UNIX profile</echo>
                                        
                                <!-- Download, unzip and rename TCK -->
                                <get src="https://download.eclipse.org/jakartaee/jsonp/2.1/jakarta-jsonp-tck-${jsonp.tck.version}.zip"
                                     dest="${project.build.directory}/tck.zip"
                                     skipexisting="true"/>
                                <unzip src="${project.build.directory}/tck.zip"
                                       dest="${project.build.directory}"/>
                                <move file="${project.build.directory}/jsonp-tck"
                                      tofile="${project.build.directory}/tck"/>

                                <!-- Install the TCK artifacts into local Maven repository -->
                                <chmod dir="${project.build.directory}/tck/artifacts"
                                       perm="ugo+rx"
                                       includes="*"/>
                                <exec dir="${project.build.directory}/tck/artifacts"
                                      executable="./artifact-install.sh">
                                    <arg line="${jsonp.tck.version}"/>
                                </exec>

                                <!-- Setup bin/pom.xml for correct Parsson version -->
                                <replaceregexp file="${tck.home}/example/pom.xml"
                                               match="&lt;jsonp-impl.version>(.*)&lt;/jsonp-impl.version>"
                                               replace="&lt;jsonp-impl.version>${parsson.version}&lt;/jsonp-impl.version>"
                                               byline="true"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- Run the tests -->
                                <exec dir="${tck.home}/bin"
                                      executable="mvn"
                                      failonerror="true">
                                    <arg value="verify"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
