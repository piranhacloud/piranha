<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cloud.piranha.external.tck</groupId>
        <artifactId>project</artifactId>
        <version>24.11.0-SNAPSHOT</version>
    </parent>

    <artifactId>piranha-external-tck-wasp</artifactId>
    <packaging>pom</packaging>

    <name>Piranha - External - TCK - WaSP</name>
    <properties>
        <ant.home>${project.build.directory}/ant</ant.home>
        <expressly.version>5.0.0</expressly.version>
        <piranha.home>${project.build.directory}/piranha</piranha.home>
        <signature.home>${project.build.directory}/signature</signature.home>
        <tck.home>${project.build.directory}/tck</tck.home>
        <test.home>${tck.home}/src/com/sun/ts/tests</test.home>
        <wasp.version>3.2.0</wasp.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>cloud.piranha</groupId>
                <artifactId>bom</artifactId>
                <version>${project.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <target>
                                <!-- download, unzip and rename TCK -->
                                <get src="https://download.eclipse.org/jakartaee/pages/3.1/jakarta-pages-tck-3.1.0.zip"
                                     dest="${project.build.directory}/tck.zip"
                                     skipexisting="true"
                                     verbose="true"/>
                                <unzip src="${project.build.directory}/tck.zip"
                                       dest="${project.build.directory}"/>
                                <move file="${project.build.directory}/pages-tck"
                                      tofile="${project.build.directory}/tck"/>
                                
                                <!-- download, unzip, rename and chmod Ant 1.10.9 -->
                                <get src="https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.9-bin.zip"
                                     dest="${project.build.directory}/ant.zip"
                                     skipexisting="true"
                                     verbose="true"/>
                                <unzip src="${project.build.directory}/ant.zip"
                                       dest="${project.build.directory}"/>
                                <move file="${project.build.directory}/apache-ant-1.10.9"
                                      tofile="${project.build.directory}/ant"/>
                                <chmod dir="${ant.home}/bin"
                                       perm="ugo+rx"
                                       includes="*"/>
                                
                                <!-- setup ts.jte for signature tests -->
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="servlet\.classes=(.*)"
                                               replace="servlet\.classes=${signature.home}/jakarta.servlet-api.jar${pathsep}${signature.home}/wasp.jar${pathsep}${signature.home}/jakarta.servlet.jsp-api.jar"
                                               byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="el\.classes=(.*)"
                                               replace="el\.classes=${signature.home}/jakarta.el-api.jar${pathsep}${signature.home}/expressly.jar"
                                               byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="sigTestClasspath=="
                                               replace="sigTestClasspath=${el.classes}${pathsep}${jspservlet.classes}"
                                               byline="true"/>
                                
                                <!-- copy Piranha script into the TCK -->
                                <copy todir="${tck.home}/bin/xml/impl/piranha">
                                    <fileset dir="${project.basedir}/src/test/piranha"/>
                                </copy>
                                
                                <!-- setup ts.jte to know about Piranha -->
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="impl\.vi=(.*)"
                                               replace="impl\.vi=piranha"
                                               byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="impl\.vi\.deploy\.dir=(.*)"
                                               replace="impl\.vi\.deploy\.dir=${piranha.home}/webapps"
                                               byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="webServerHost=(.*)"
                                               replace="webServerHost=localhost"
                                               byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="webServerPort=(.*)"
                                               replace="webServerPort=8080"
                                               byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                               match="webServerHome=(.*)"
                                               replace="webServerHome=${piranha.home}"
                                               byline="true"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- start the server -->
                                <exec executable="${piranha.home}/bin/start.sh"
                                      dir="${piranha.home}/bin"/>
                                <!-- deploy all the WARs -->
                                <exec executable="${ant.home}/bin/ant" 
                                      dir="${tck.home}/bin">
                                    <arg value="-Dwork.dir=${piranha.home}/work"/>
                                    <arg value="-Dreport.dir=${piranha.home}/report"/>
                                    <arg value="deploy.all"/>
                                </exec>
                                <!-- stop the server -->
                                <exec executable="${piranha.home}/bin/stop.sh"
                                      dir="${piranha.home}/bin"/>
                                <sleep seconds="15"/>
                                <!-- start the server -->
                                <exec executable="${piranha.home}/bin/start.sh"
                                      dir="${piranha.home}/bin"/>
                                <!-- give the server some time to settle down -->
                                <sleep seconds="15"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- run all the tests -->
                                <exec executable="${ant.home}/bin/ant" 
                                      dir="${test.home}">
                                    <arg value="-Dwork.dir=${piranha.home}/work"/>
                                    <arg value="-Dreport.dir=${piranha.home}/report"/>
                                    <arg value="runclient"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <target>
                                <!-- stop the server -->
                                <exec executable="${piranha.home}/bin/stop.sh"
                                      dir="${piranha.home}/bin"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.servlet</groupId>
                                    <artifactId>jakarta.servlet-api</artifactId>
                                    <version>6.1.0-M1</version>
                                    <outputDirectory>${signature.home}</outputDirectory>
                                    <destFileName>jakarta.servlet-api.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.glassfish.wasp</groupId>
                                    <artifactId>wasp</artifactId>
                                    <version>4.0.0-M1</version>
                                    <outputDirectory>${signature.home}</outputDirectory>
                                    <destFileName>wasp.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.servlet.jsp</groupId>
                                    <artifactId>jakarta.servlet.jsp-api</artifactId>
                                    <version>${jakarta.servlet.jsp-api.version}</version>
                                    <outputDirectory>${signature.home}</outputDirectory>
                                    <destFileName>jakarta.servlet.jsp-api.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.el</groupId>
                                    <artifactId>jakarta.el-api</artifactId>
                                    <version>${jakarta.el.version}</version>
                                    <outputDirectory>${signature.home}</outputDirectory>
                                    <destFileName>jakarta.el-api.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.glassfish.expressly</groupId>
                                    <artifactId>expressly</artifactId>
                                    <version>6.0.0-M1</version>
                                    <outputDirectory>${signature.home}</outputDirectory>
                                    <destFileName>expressly.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>cloud.piranha.dist</groupId>
                                    <artifactId>piranha-dist-server</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
