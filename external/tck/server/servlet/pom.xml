<?xml version="1.0" encoding="UTF-8"?>

<project 
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns:if="ant:if">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cloud.piranha.external.tck.server</groupId>
        <artifactId>project</artifactId>
        <version>24.10.0-SNAPSHOT</version>
    </parent>

    <artifactId>servlet-tck</artifactId>
    <packaging>pom</packaging>

    <name>Piranha Server - Jakarta Servlet TCK</name>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>cloud.piranha</groupId>
                <artifactId>bom</artifactId>
                <version>${project.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <properties>
        <ant.home>${project.build.directory}/ant</ant.home>
        <piranha.home>${project.build.directory}/piranha</piranha.home>
        <signature.home>${project.build.directory}/signature</signature.home>
        <tck.home>${project.build.directory}/tck</tck.home>
        <test.home>${tck.home}/src/com/sun/ts/tests</test.home>
    </properties>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                        
                                <!-- Download, unzip and rename TCK -->
                                <get src="https://download.eclipse.org/jakartaee/servlet/6.0/jakarta-servlet-tck-${servlet.tck.version}.zip"
                                             dest="${project.build.directory}/tck.zip" skipexisting="true"/>
                                <unzip src="${project.build.directory}/tck.zip"
                                               dest="${project.build.directory}"/>
                                <move file="${project.build.directory}/servlet-tck"
                                              tofile="${project.build.directory}/tck"/>
                                
                                <!-- Download, unzip, rename and chmod Ant 1.10.9 -->
                                <get src="https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.9-bin.zip"
                                             dest="${project.build.directory}/ant.zip" skipexisting="true"/>
                                <unzip src="${project.build.directory}/ant.zip"
                                               dest="${project.build.directory}"/>
                                <move file="${project.build.directory}/apache-ant-1.10.9"
                                              tofile="${project.build.directory}/ant"/>
                                <chmod dir="${ant.home}/bin"
                                               perm="ugo+rx"
                                               includes="*"/>

                                <!-- Optionally control which tests we are running -->
                                <sequential if:set="exclude.timeout">
                                    <echo message="Excluding tests that time-out" />    
                                    <copy file="${tck.home}/bin/ts.jtx"
                                                  tofile="${tck.home}/bin/ts.jtx.orig" />
                                    
                                    <copy file="${project.basedir}/src/test/etc/ts.jtx"
                                                  tofile="${tck.home}/bin/ts.jtx" />
                                </sequential>
                                    
                                <sequential if:set="exclude.failing">
                                    <echo message="Excluding failing tests" /> 
                                    <copy file="${tck.home}/bin/ts.jtx"
                                                  tofile="${tck.home}/bin/ts.jtx.orig" />
                                    
                                    <copy file="${project.basedir}/src/test/etc/ts-failed.jtx"
                                                  tofile="${tck.home}/bin/ts.jtx" />
                                </sequential>

                                <sequential if:set="run.test">
                                    <echo message="Running single test" /> 
                                    <copy file="${tck.home}/bin/ts.jtx"
                                                  tofile="${tck.home}/bin/ts.jtx.orig" />
                                    
                                    <copy file="${project.basedir}/src/test/etc/ts-all.jtx"
                                                  tofile="${tck.home}/bin/ts.jtx" />
                                    
                                    <replaceregexp file="${tck.home}/bin/ts.jtx"
                                                           match="${run.test}$" replace="#${run.test}" byline="true" />
                                </sequential>
                                        
                                <!-- exclude TCK tests per https://github.com/jakartaee/servlet/issues/488 -->
                                <echo append="true" file="${tck.home}/bin/ts.jtx">
# exclude TCK tests per https://github.com/jakartaee/servlet/issues/488
com/sun/ts/tests/servlet/api/jakarta_servlet_http/httpsessionx/URLClient.java#invalidateHttpSessionxTest
com/sun/ts/tests/servlet/api/jakarta_servlet_http/httpsessionx/URLClient.java#expireHttpSessionxrfTest
com/sun/ts/tests/servlet/api/jakarta_servlet_http/httpsessionx/URLClient.java#expireHttpSessionxri1Test
com/sun/ts/tests/servlet/api/jakarta_servlet_http/httpsessionx/URLClient.java#expireHttpSessionxriTest
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#dispatchReturnTest4
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#dispatchReturnTest5
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#negativeDispatchTest12
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#negativeDispatchTest13
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#negativeDispatchTest8
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#negativeDispatchTest9
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#startAsyncAgainTest12
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#startAsyncAgainTest13
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#startAsyncAgainTest14
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#startAsyncAgainTest15
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#startAsyncAgainTest16
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#startAsyncAgainTest17
# 
                                </echo>
                                <!-- exclude TCK test per https://github.com/jakartaee/servlet/issues/489 -->
                                <echo append="true" file="${tck.home}/bin/ts.jtx">
# exclude TCK test per https://github.com/jakartaee/servlet/issues/489
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#dispatchAfterCommitTest4
# 
                                </echo>
                                <!-- exclude TCK test per https://github.com/jakartaee/servlet/issues/490 -->
                                <echo append="true" file="${tck.home}/bin/ts.jtx">
# exclude TCK test per https://github.com/jakartaee/servlet/issues/490 
com/sun/ts/tests/servlet/api/jakarta_servlet/dispatchtest/URLClient.java#dispatchAfterCommitTest5
#
                                </echo>

                                <!-- Setup ts.jte for signature tests -->
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="servlet\.classes=(.*)"
                                                       replace="servlet\.classes=${signature.home}/jakarta.servlet-api.jar"
                                                       byline="true"/>
                                        
                                <!-- Remove java.endorsed.dirs by Xbootclasspath -->
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="\s+-Djava\.endorsed\.dirs=(.*)"
                                                       replace="-Xbootclasspath/a:${tck.home}/endorsedlib/flow\.jar \\\"
                                                       byline="true"/>
                                
                                <!-- Copy Piranha script into the TCK -->
                                <copy todir="${tck.home}/bin/xml/impl/piranha">
                                    <fileset dir="${project.basedir}/src/test/piranha"/>
                                </copy>
                                
                                <!-- Setup ts.jte to know about Piranha -->
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="impl\.vi=(.*)"
                                                       replace="impl\.vi=piranha"
                                                       byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="impl\.vi\.deploy\.dir=(.*)"
                                                       replace="impl\.vi\.deploy\.dir=${piranha.home}/webapps"
                                                       byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="webServerHost=(.*)"
                                                       replace="webServerHost=localhost"
                                                       byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="webServerPort=(.*)"
                                                       replace="webServerPort=8080"
                                                       byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="securedWebServicePort=(.*)"
                                                       replace="securedWebServicePort=8443"
                                                       byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="\s+-Djavax\.net\.ssl\.keyStore=(.*)"
                                                       replace="-Djavax\.net\.ssl\.keyStore=${piranha.home}/etc/keystore.jks \\\"
                                                       byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="\s+-Djavax\.net\.ssl\.keyStorePassword=(.*)"
                                                       replace="-Djavax\.net\.ssl\.keyStorePassword=password \\\"
                                                       byline="true"/>
                                <replaceregexp file="${tck.home}/bin/ts.jte"
                                                       match="\s+-Djavax\.net\.ssl\.trustStore=(.*)"
                                                       replace="-Djavax\.net\.ssl\.trustStore=${piranha.home}/etc/truststore.jks -Djavax\.net\.ssl\.trustStorePassword=password \\\"
                                                       byline="true"/>
                                        
                                <!-- copy Piranha users / roles into the TCK -->
                                <copy todir="${piranha.home}/etc">
                                    <fileset dir="${project.basedir}/src/test/etc"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                    
                                <!-- Deploy all the WARs -->
                                <exec executable="${ant.home}/bin/ant" dir="${tck.home}/bin">
                                    <arg value="-Dwork.dir=${piranha.home}/work"/>
                                    <arg value="-Dreport.dir=${piranha.home}/report"/>
                                    <arg value="deploy.all"/>
                                    <arg value="-Drun.test=${run.test}" if:set="run.test"/>
                                </exec>
                                        
                                <!-- Start the server -->
                                <exec executable="${piranha.home}/bin/start.sh" dir="${piranha.home}/bin">
                                    <arg value="--suspend" if:set="suspend" />
                                    <arg value="--https-keystore-file etc/keystore.jks"/>
                                    <arg value="--https-keystore-password password"/>
                                    <arg value="--https-port 8443"/> 
                                    <arg value="--ssl-truststore-file etc/truststore.jks"/>
                                    <arg value="--ssl-truststore-password password"/>
                                </exec>
                                        
                                <!-- Give the server some time to settle down -->
                                <sleep seconds="60" if:set="suspend"/>
                                <sleep seconds="60" unless:set="run.test"/>
                                <sleep seconds="10" if:set="run.test" unless:set="suspend"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- Run all the tests -->
                                <exec executable="${ant.home}/bin/ant" dir="${test.home}">
                                    <arg value="-Dwork.dir=${piranha.home}/work"/>
                                    <arg value="-Dreport.dir=${piranha.home}/report"/>
                                    <arg value="runclient"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <!-- stop the server -->
                                <exec executable="${piranha.home}/bin/stop.sh" dir="${piranha.home}/bin" unless:set="server.keeprunning" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.servlet</groupId>
                                    <artifactId>jakarta.servlet-api</artifactId>
                                    <outputDirectory>${signature.home}</outputDirectory>
                                    <destFileName>jakarta.servlet-api.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>cloud.piranha.dist</groupId>
                                    <artifactId>piranha-dist-server</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
