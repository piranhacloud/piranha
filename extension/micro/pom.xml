<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cloud.piranha.extension</groupId>
        <artifactId>project</artifactId>
        <version>24.6.0-SNAPSHOT</version>
    </parent>

    <artifactId>piranha-extension-micro</artifactId>

    <name>Piranha - Extension - Micro</name>
    <description>
        This module delivers the default extension for Piranha Micro.
    </description>

    <dependencies>
        <!-- compile -->
        <dependency>
            <groupId>cloud.piranha.core</groupId>
            <artifactId>piranha-core-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.core</groupId>
            <artifactId>piranha-core-impl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-apache-fileupload</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-angus</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-expressly</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-jaxb</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-mojarra</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-soteria</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-wasp</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-naming-cdi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-default-datasource</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-jersey</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-jstl</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipse-yasson</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency> 
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-policy</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-scinitializer</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-redhat-weld</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-transact</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-security-jakarta</artifactId>
            <version>${project.version}</version>
        </dependency>        
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-servletannotations</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-tempdir</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-webxml</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-welcomefile</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        
        <dependency>
            <groupId>cloud.piranha.resource</groupId>
            <artifactId>piranha-resource-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <!-- runtime -->
        
        <!-- Jakarta JSON Processing API -->
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Eclipse JSON Processing implementation -->
        <dependency>
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>parsson</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Jakarta JSON Binding API -->
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Jakarta Validation API -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        
        <!-- Jakarta Validation implementation -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-cdi</artifactId>
        </dependency>
        
        <!-- Jakarta Mail -->
        <dependency>
            <groupId>jakarta.mail</groupId>
            <artifactId>jakarta.mail-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
        </dependency>
                
        <!-- Jakarta WebSocket implementation -->
        <dependency>
            <groupId>org.glassfish.tyrus</groupId>
            <artifactId>tyrus-container-servlet</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-eclipselink</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- Jakarta XML Bind API -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Jakarta Annotation API -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Jakarta Enterprise Beans API -->
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Jakarta Enterprise Beans (Lite) implementation -->
        <dependency>
            <groupId>ee.omnifish</groupId>
            <artifactId>omnibeans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omniservices</artifactId>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omniutils</artifactId>
        </dependency>
        
        <!-- MicroProfile JWT API -->
        <dependency>
            <groupId>org.eclipse.microprofile.jwt</groupId>
            <artifactId>microprofile-jwt-auth-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- MicroProfile JWT implementation -->
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>microprofile-jwt-auth</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- MicroProfile Config API -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- MicroProfile Config implementation -->
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omni-mp-config</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>
</project>
